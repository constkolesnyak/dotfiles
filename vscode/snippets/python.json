{
//* TOP

    "#!/usr/bin/env python": {
        "prefix": "env",
        "body": "#!/usr/bin/env python\n$0"
    },
    "#!/usr/bin/env python3": {
        "prefix": "env3",
        "body": "#!/usr/bin/env python3\n$0"
    },
    "from ... import ...": {
        "prefix": "from",
        "body": "from ${1:package/module} import ${0:names}"
    },


//* CLASS

    "class": {
        "prefix": "class",
        "body": [
            "class ${1:Class}(${2:BaseClass}):",
            "\tdef __init__(self, ${3:args}):",
            "\t\t${0:...}"
        ]
    },
    "dataclass": {
        "prefix": "dataclass",
        "body": [
            "from dataclasses import dataclass",
            "@dataclass",
            "class ${1:Class}(${2:BaseClass}):\n\t${0:...}"
        ]
    },
    "def method": {
        "prefix": "defm",
        "body": "def ${1:method}(self, ${2:args}):\n\t${0:...}"
    },
    "def class method": {
        "prefix": "defc",
        "body": "@classmethod\ndef ${1:classmethod}(cls, ${2:args}):\n\t${0:...}"
    },
    "self": {
        "prefix": "s",
        "body": "self.$0"
    },
    "__magic__": {
        "prefix": "__",
        "body": "__${1:init}__$0"
    },


//* FUNCTION

    "def function": {
        "prefix": "def",
        "body": "def ${1:function}(${2:args}):\n\t${0:...}"
    },
    "async def": {
        "prefix": "adef",
        "body": "async def ${1:function}(${2:args}):\n\t${0:...}"
    },


//* COMPREHENSION

    "list comprehension": {
        "prefix": "lc",
        "body": "[${0:...} for ${1:i} in ${2:iterable}]"
    },
    "list comprehension if condition": {
        "prefix": "lcif",
        "body": "[${0:...} for ${1:i} in ${2:iterable} if ${3:condition}]"
    },
    "generator comprehension": {
        "prefix": "gc",
        "body": "(${0:...} for ${1:i} in ${2:iterable})"
    },
    "generator comprehension if condition": {
        "prefix": "gcif",
        "body": "(${0:...} for ${1:i} in ${2:iterable} if ${3:condition})"
    },
    "dictionary comprehension": {
        "prefix": "dc",
        "body": "{${3:key}: ${0:value} for ${1:i} in ${2:iterable}}"
    },
    "dictionary comprehension if condition": {
        "prefix": "dcif",
        "body": "{${4:key}: ${0:value} for ${1:i} in ${2:iterable} if ${3:condition}}"
    },
    "set comprehension": {
        "prefix": "sc",
        "body": "{${0:...} for ${1:i} in ${2:iterable}}"
    },
    "set comprehension if condition": {
        "prefix": "scif",
        "body": "{${0:...} for ${1:i} in ${2:iterable} if ${3:condition}}"
    },


//* CONTROL FLOW
    
    "if": {
        "prefix": "if",
        "body": "if ${1:condition}:\n\t${0:...}"
    },
    "for": {
        "prefix": "for",
        "body": "for ${1:i} in ${2:iterable}:\n\t${0:...}"
    },
    "while": {
        "prefix": "while",
        "body": "while ${1:condition}:\n\t${0:...}"
    },
    "try-except": {
        "prefix": "try",
        "body": [
            "try:",
            "\t${1:...}",
            "except ${2:Exception} as ${3:exc}:",
            "\t${0:...}"
        ]
    },
    "match-case": {
        "prefix": "match",
        "body": [
            "match ${1:expression}:",
            "\tcase ${2:pattern}:",
            "\t\t${3:...}",
            "\tcase _:",
            "\t\t${0:...}"
        ]
    },

    
//* MISC

    "if __name__ == '__main__'": {
        "prefix": "ifmain",
        "body": "if __name__ == '__main__':\n\t${0:main()}"
    },
    "lambda": {
        "prefix": "lam",
        "body": "lambda ${1:args}: ${0:...}"
    },
    "pprint": {
        "prefix": "l",
        "body": "pprint(${0:args})"
    }
}
